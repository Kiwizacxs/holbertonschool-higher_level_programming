-------------------------
Test for base_geometry
-------------------------

>>> BG = __import__("7-base_geometry").BaseGeometry

>>> value1 = BG()
>>> value1.integer_validator("Float", 3.14)
Traceback (most recent call last):
TypeError: Float must be an integer

>>> value2 = BG()
>>> value2.integer_validator("int>0", 3)

>>> value3 = BG()
>>> value3.integer_validator("int<0", -1)
Traceback (most recent call last):
ValueError: int<0 must be great than 0

>>> value4 = BG()
>>> value4.integer_validator("string", "Holberton")
Traceback (most recent call last):
TypeError: string must be an integer

>>> value5 = BG()
>>> value5.integer_validator("list", [1, 2])
Traceback (most recent call last):
TypeError: list must be an integer

>>> value6 = BG()
>>> value6.integer_validator("nothing")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> value7 = BG()
>>> value7.integer_validator("zero", 0)
Traceback (most recent call last):
ValueError: zero must be great than 0

>>> value8 = BG()
>>> value8.integer_validator("tuple", ("A", 0))
Traceback (most recent call last):
TypeError: tuple must be an integer